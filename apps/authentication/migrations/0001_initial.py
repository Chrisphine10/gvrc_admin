# Generated by Django 4.2.8 on 2025-08-28 07:23

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('full_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone_number', models.CharField(max_length=20, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('verified', models.BooleanField(default=False)),
                ('password_reset_token', models.CharField(blank=True, max_length=255)),
                ('password_changed_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('username', models.CharField(blank=True, max_length=150, null=True, unique=True)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('permission_id', models.AutoField(primary_key=True, serialize=False)),
                ('permission_name', models.CharField(max_length=100, unique=True)),
                ('resource_name', models.CharField(max_length=50)),
                ('action_name', models.CharField(max_length=20)),
                ('description', models.CharField(blank=True, max_length=255)),
            ],
            options={
                'db_table': 'permissions',
            },
        ),
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('role_id', models.AutoField(primary_key=True, serialize=False)),
                ('role_name', models.CharField(max_length=50, unique=True)),
                ('description', models.CharField(blank=True, max_length=255)),
                ('is_system_role', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'user_roles',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('profile_id', models.AutoField(primary_key=True, serialize=False)),
                ('avatar_url', models.CharField(blank=True, default='/static/assets/img/brand/hodi app logo.png', max_length=500)),
                ('bio', models.TextField(blank=True)),
                ('department', models.CharField(blank=True, max_length=100)),
                ('job_title', models.CharField(blank=True, max_length=100)),
                ('notification_preferences', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('user', models.OneToOneField(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_profiles',
            },
        ),
        migrations.CreateModel(
            name='CustomToken',
            fields=[
                ('key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, related_name='custom_auth_token', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'custom_tokens',
            },
        ),
        migrations.CreateModel(
            name='UserSession',
            fields=[
                ('session_id', models.CharField(max_length=128, primary_key=True, serialize=False)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=8, max_digits=10, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=8, max_digits=11, null=True)),
                ('session_data', models.JSONField(blank=True, default=dict)),
                ('game_high_score', models.IntegerField(default=0, help_text='Highest game score achieved in this session')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_activity_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('expires_at', models.DateTimeField()),
                ('ended_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_sessions',
                'indexes': [models.Index(fields=['user'], name='user_sessio_user_id_eb20aa_idx'), models.Index(fields=['is_active'], name='user_sessio_is_acti_1b3cb1_idx'), models.Index(fields=['expires_at'], name='user_sessio_expires_66ae96_idx')],
            },
        ),
        migrations.CreateModel(
            name='UserRoleAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assigned_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('assigned_by', models.ForeignKey(db_column='assigned_by', on_delete=django.db.models.deletion.CASCADE, related_name='role_assignments_granted', to=settings.AUTH_USER_MODEL)),
                ('role', models.ForeignKey(db_column='role_id', on_delete=django.db.models.deletion.CASCADE, to='authentication.userrole')),
                ('user', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_role_assignments',
                'unique_together': {('user', 'role')},
            },
        ),
        migrations.CreateModel(
            name='RolePermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('granted_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('granted_by', models.ForeignKey(db_column='granted_by', on_delete=django.db.models.deletion.CASCADE, related_name='role_permissions_granted', to=settings.AUTH_USER_MODEL)),
                ('permission', models.ForeignKey(db_column='permission_id', on_delete=django.db.models.deletion.CASCADE, to='authentication.permission')),
                ('role', models.ForeignKey(db_column='role_id', on_delete=django.db.models.deletion.CASCADE, to='authentication.userrole')),
            ],
            options={
                'db_table': 'role_permissions',
                'unique_together': {('role', 'permission')},
            },
        ),
        migrations.CreateModel(
            name='ApiToken',
            fields=[
                ('token_id', models.AutoField(primary_key=True, serialize=False)),
                ('token_name', models.CharField(max_length=100)),
                ('token_hash', models.CharField(max_length=255, unique=True)),
                ('last_used_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('expires_at', models.DateTimeField()),
                ('user', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'api_tokens',
                'indexes': [models.Index(fields=['user'], name='api_tokens_user_id_caf836_idx'), models.Index(fields=['is_active'], name='api_tokens_is_acti_949075_idx'), models.Index(fields=['expires_at'], name='api_tokens_expires_a047d2_idx')],
            },
        ),
    ]
