# Generated by Django 5.2.5 on 2025-08-21 11:48

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('geography', '0001_initial'),
        ('lookups', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Facility',
            fields=[
                ('facility_id', models.AutoField(primary_key=True, serialize=False)),
                ('facility_name', models.CharField(max_length=200)),
                ('facility_code', models.CharField(blank=True, max_length=50, unique=True)),
                ('registration_number', models.CharField(max_length=100, unique=True)),
                ('address_line_1', models.CharField(blank=True, max_length=255)),
                ('address_line_2', models.CharField(blank=True, max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('description', models.TextField(blank=True)),
                ('website_url', models.CharField(blank=True, max_length=500)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('created_by', models.ForeignKey(db_column='created_by', on_delete=django.db.models.deletion.CASCADE, related_name='facilities_created', to=settings.AUTH_USER_MODEL)),
                ('operational_status', models.ForeignKey(db_column='operational_status_id', on_delete=django.db.models.deletion.CASCADE, to='lookups.operationalstatus')),
                ('updated_by', models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='facilities_updated', to=settings.AUTH_USER_MODEL)),
                ('ward', models.ForeignKey(db_column='ward_id', on_delete=django.db.models.deletion.CASCADE, to='geography.ward')),
            ],
            options={
                'verbose_name_plural': 'Facilities',
                'db_table': 'facilities',
            },
        ),
        migrations.CreateModel(
            name='FacilityContact',
            fields=[
                ('contact_id', models.AutoField(primary_key=True, serialize=False)),
                ('contact_value', models.CharField(max_length=255)),
                ('contact_person_name', models.CharField(blank=True, max_length=100)),
                ('is_primary', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('contact_type', models.ForeignKey(db_column='contact_type_id', on_delete=django.db.models.deletion.CASCADE, to='lookups.contacttype')),
                ('created_by', models.ForeignKey(db_column='created_by', on_delete=django.db.models.deletion.CASCADE, related_name='facility_contacts_created', to=settings.AUTH_USER_MODEL)),
                ('facility', models.ForeignKey(db_column='facility_id', on_delete=django.db.models.deletion.CASCADE, to='facilities.facility')),
                ('updated_by', models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='facility_contacts_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Facility Contacts',
                'db_table': 'facility_contacts',
            },
        ),
        migrations.CreateModel(
            name='FacilityCoordinate',
            fields=[
                ('coordinate_id', models.AutoField(primary_key=True, serialize=False)),
                ('latitude', models.DecimalField(decimal_places=8, max_digits=10)),
                ('longitude', models.DecimalField(decimal_places=8, max_digits=11)),
                ('collection_date', models.DateField()),
                ('data_source', models.CharField(blank=True, max_length=100)),
                ('collection_method', models.CharField(blank=True, max_length=50)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('facility', models.ForeignKey(db_column='facility_id', on_delete=django.db.models.deletion.CASCADE, to='facilities.facility')),
            ],
            options={
                'verbose_name_plural': 'Facility Coordinates',
                'db_table': 'facility_coordinates',
            },
        ),
        migrations.CreateModel(
            name='FacilityGBVCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.ForeignKey(db_column='created_by', on_delete=django.db.models.deletion.CASCADE, related_name='facility_gbv_categories_created', to=settings.AUTH_USER_MODEL)),
                ('facility', models.ForeignKey(db_column='facility_id', on_delete=django.db.models.deletion.CASCADE, to='facilities.facility')),
                ('gbv_category', models.ForeignKey(db_column='gbv_category_id', on_delete=django.db.models.deletion.CASCADE, to='lookups.gbvcategory')),
            ],
            options={
                'db_table': 'facility_gbv_categories',
            },
        ),
        migrations.CreateModel(
            name='FacilityInfrastructure',
            fields=[
                ('infrastructure_id', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.TextField(blank=True)),
                ('capacity', models.IntegerField(blank=True, null=True)),
                ('current_utilization', models.IntegerField(blank=True, null=True)),
                ('is_available', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('condition_status', models.ForeignKey(db_column='condition_status_id', on_delete=django.db.models.deletion.CASCADE, to='lookups.conditionstatus')),
                ('facility', models.ForeignKey(db_column='facility_id', on_delete=django.db.models.deletion.CASCADE, to='facilities.facility')),
                ('infrastructure_type', models.ForeignKey(db_column='infrastructure_type_id', on_delete=django.db.models.deletion.CASCADE, to='lookups.infrastructuretype')),
            ],
            options={
                'verbose_name_plural': 'Facility Infrastructure',
                'db_table': 'facility_infrastructure',
            },
        ),
        migrations.CreateModel(
            name='FacilityOwner',
            fields=[
                ('owner_id', models.AutoField(primary_key=True, serialize=False)),
                ('owner_name', models.CharField(max_length=200)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('created_by', models.ForeignKey(db_column='created_by', on_delete=django.db.models.deletion.CASCADE, related_name='facility_owners_created', to=settings.AUTH_USER_MODEL)),
                ('facility', models.ForeignKey(db_column='facility_id', on_delete=django.db.models.deletion.CASCADE, to='facilities.facility')),
                ('owner_type', models.ForeignKey(db_column='owner_type_id', on_delete=django.db.models.deletion.CASCADE, to='lookups.ownertype')),
                ('updated_by', models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='facility_owners_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Facility Owners',
                'db_table': 'facility_owners',
            },
        ),
        migrations.CreateModel(
            name='FacilityService',
            fields=[
                ('service_id', models.AutoField(primary_key=True, serialize=False)),
                ('service_name', models.CharField(max_length=200)),
                ('service_description', models.TextField(blank=True)),
                ('is_free', models.BooleanField(default=False)),
                ('cost_range', models.CharField(blank=True, max_length=100)),
                ('currency', models.CharField(default='KES', max_length=3)),
                ('availability_hours', models.CharField(blank=True, max_length=200)),
                ('availability_days', models.CharField(blank=True, max_length=100)),
                ('appointment_required', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('facility', models.ForeignKey(db_column='facility_id', on_delete=django.db.models.deletion.CASCADE, to='facilities.facility')),
                ('service_category', models.ForeignKey(db_column='service_category_id', on_delete=django.db.models.deletion.CASCADE, to='lookups.servicecategory')),
            ],
            options={
                'verbose_name_plural': 'Facility Services',
                'db_table': 'facility_services',
            },
        ),
        migrations.AddIndex(
            model_name='facility',
            index=models.Index(fields=['ward'], name='facilities_ward_id_93b6d2_idx'),
        ),
        migrations.AddIndex(
            model_name='facility',
            index=models.Index(fields=['operational_status'], name='facilities_operati_28f767_idx'),
        ),
        migrations.AddIndex(
            model_name='facility',
            index=models.Index(fields=['is_active'], name='facilities_is_acti_76f1be_idx'),
        ),
        migrations.AddIndex(
            model_name='facilitycontact',
            index=models.Index(fields=['facility'], name='facility_co_facilit_72d18d_idx'),
        ),
        migrations.AddIndex(
            model_name='facilitycontact',
            index=models.Index(fields=['contact_type'], name='facility_co_contact_805b0e_idx'),
        ),
        migrations.AddIndex(
            model_name='facilitycontact',
            index=models.Index(fields=['is_primary'], name='facility_co_is_prim_a3bcec_idx'),
        ),
        migrations.AddIndex(
            model_name='facilitycoordinate',
            index=models.Index(fields=['facility'], name='facility_co_facilit_12040b_idx'),
        ),
        migrations.AddIndex(
            model_name='facilitycoordinate',
            index=models.Index(fields=['collection_date'], name='facility_co_collect_67ee0c_idx'),
        ),
        migrations.AddIndex(
            model_name='facilitygbvcategory',
            index=models.Index(fields=['facility'], name='facility_gb_facilit_2a099c_idx'),
        ),
        migrations.AddIndex(
            model_name='facilitygbvcategory',
            index=models.Index(fields=['gbv_category'], name='facility_gb_gbv_cat_c7e042_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='facilitygbvcategory',
            unique_together={('facility', 'gbv_category')},
        ),
        migrations.AddIndex(
            model_name='facilityinfrastructure',
            index=models.Index(fields=['facility'], name='facility_in_facilit_3980d5_idx'),
        ),
        migrations.AddIndex(
            model_name='facilityinfrastructure',
            index=models.Index(fields=['infrastructure_type'], name='facility_in_infrast_970d40_idx'),
        ),
        migrations.AddIndex(
            model_name='facilityinfrastructure',
            index=models.Index(fields=['condition_status'], name='facility_in_conditi_1ec089_idx'),
        ),
        migrations.AddIndex(
            model_name='facilityowner',
            index=models.Index(fields=['facility'], name='facility_ow_facilit_21de47_idx'),
        ),
        migrations.AddIndex(
            model_name='facilityowner',
            index=models.Index(fields=['owner_type'], name='facility_ow_owner_t_a26f8d_idx'),
        ),
        migrations.AddIndex(
            model_name='facilityservice',
            index=models.Index(fields=['facility'], name='facility_se_facilit_c92597_idx'),
        ),
        migrations.AddIndex(
            model_name='facilityservice',
            index=models.Index(fields=['service_category'], name='facility_se_service_a2b980_idx'),
        ),
        migrations.AddIndex(
            model_name='facilityservice',
            index=models.Index(fields=['is_active'], name='facility_se_is_acti_a1e033_idx'),
        ),
    ]
