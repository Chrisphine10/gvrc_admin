# Generated by Django 4.2.8 on 2025-08-05 20:22

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('facilities', '0003_facility_latitude_facility_longitude_and_more'),
    ]

    operations = [
        migrations.AddField(
            model_name='facility_infrastructure',
            name='capacity',
            field=models.CharField(blank=True, help_text='Capacity or specifications (e.g., 4 passengers, 1000W)', max_length=50),
        ),
        migrations.AddField(
            model_name='facility_infrastructure',
            name='fuel_type',
            field=models.CharField(blank=True, help_text='Fuel type for vehicles (e.g., Petrol, Diesel, Electric)', max_length=20),
        ),
        migrations.AddField(
            model_name='facility_infrastructure',
            name='insurance_expiry',
            field=models.DateField(blank=True, help_text='Insurance expiry date for vehicles', null=True),
        ),
        migrations.AddField(
            model_name='facility_infrastructure',
            name='is_operational',
            field=models.BooleanField(default=True, help_text='Whether the equipment is currently operational'),
        ),
        migrations.AddField(
            model_name='facility_infrastructure',
            name='model_year',
            field=models.PositiveIntegerField(blank=True, help_text='Year of manufacture', null=True),
        ),
        migrations.AddField(
            model_name='facility_infrastructure',
            name='next_maintenance',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='facility_infrastructure',
            name='registration_number',
            field=models.CharField(blank=True, help_text='Vehicle registration number if applicable', max_length=50),
        ),
        migrations.AlterField(
            model_name='facility_infrastructure',
            name='category',
            field=models.CharField(choices=[('ambulance', 'Ambulance'), ('emergency_vehicle', 'Emergency Vehicle'), ('medical_transport', 'Medical Transport Vehicle'), ('police_vehicle', 'Police Vehicle'), ('security_vehicle', 'Security Vehicle'), ('medical_equipment', 'Medical Equipment'), ('diagnostic_equipment', 'Diagnostic Equipment'), ('emergency_equipment', 'Emergency Equipment'), ('first_aid_equipment', 'First Aid Equipment'), ('communication_equipment', 'Communication Equipment'), ('radio_equipment', 'Radio Equipment'), ('emergency_communication', 'Emergency Communication'), ('security_equipment', 'Security Equipment'), ('surveillance_equipment', 'Surveillance Equipment'), ('safety_equipment', 'Safety Equipment'), ('it_equipment', 'IT Equipment'), ('office_equipment', 'Office Equipment'), ('data_management', 'Data Management Equipment'), ('power_equipment', 'Power Equipment'), ('water_equipment', 'Water Equipment'), ('generator', 'Generator'), ('backup_systems', 'Backup Systems'), ('furniture', 'Furniture'), ('storage_equipment', 'Storage Equipment'), ('maintenance_equipment', 'Maintenance Equipment')], max_length=30),
        ),
        migrations.AlterField(
            model_name='facility_infrastructure',
            name='condition',
            field=models.CharField(choices=[('excellent', 'Excellent'), ('good', 'Good'), ('fair', 'Fair'), ('poor', 'Poor'), ('non_functional', 'Non-Functional'), ('under_maintenance', 'Under Maintenance')], default='good', max_length=20),
        ),
        migrations.AlterField(
            model_name='facility_infrastructure',
            name='equipment_name',
            field=models.CharField(help_text='Name of the equipment or vehicle (e.g., Ambulance, Emergency Radio)', max_length=200),
        ),
        migrations.AlterField(
            model_name='facility_infrastructure',
            name='notes',
            field=models.TextField(blank=True, help_text='Additional notes about the equipment'),
        ),
        migrations.AlterField(
            model_name='facility_infrastructure',
            name='quantity',
            field=models.PositiveIntegerField(default=1, help_text='Number of units available'),
        ),
    ]
